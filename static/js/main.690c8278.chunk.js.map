{"version":3,"sources":["calculators/main.js","components/Daily/Box.tsx","calculators/daily.ts","components/utils/Button.tsx","components/utils/Input.tsx","components/utils/Label.tsx","components/Daily/Filter.tsx","components/Daily/Context.tsx","components/Daily/UniverseSwitch.tsx","components/Daily/Daily.tsx","calculators/fluffy.ts","components/Fluffy/Context.tsx","components/Fluffy/InputSection.tsx","components/Fluffy/LevelUpTable.tsx","components/Fluffy/RunTimeTable.tsx","components/Fluffy/Stats.tsx","components/Fluffy/UniverseSwitch.tsx","components/Fluffy/Template.tsx","components/Fluffy/Fluffy.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["dailyModifiers","minDamage","description","str","prettify","this","getMult","getWeight","minMaxStep","chance","maxDamage","plague","stacks","count","Math","ceil","sqrt","icon","incompatible","stackDesc","weakness","large","dedication","famine","badStrength","badHealth","badMapStrength","badMapHealth","crits","trimpCritChanceUp","trimpCritChanceDown","bogged","dysfunctional","oddTrimpNerf","evenTrimpBuff","karma","window","daily_universe","getMaxStacks","floor","toxic","realStrength","pow","bloodthirst","getFreq","freq","max","text","next","iconOnEnemy","explosive","mult","slippery","rampage","mutimps","size","getMaxCellNum","empower","stacksToAdd","worldStacksOnly","pressure","round","timePerStack","mirrored","reflectChance","getReflectChance","toString","testWeights","min","results","x","result","push","reflectDamage","attack","random","metallicThumb","hemmorrhage","res","getResources","length","charAt","toUpperCase","slice","strength","parseInt","blockU1","number","numberTmp","prettifySub","toExponential","base","log","game","options","menu","standardNotation","enabled","logBase","global","logNotBase","exponent","suffices","suffix","suf2","parseFloat","replace","toFixed","isRewardActive","reward","universe","evolution","level","boughtEarly","minus","WeekBox","_ref","_jsx","className","clsx","baseBox","children","Box","_ref2","object","_useState","useState","_useState2","_slicedToArray","expanded","setExpanded","value","date","preview","tier","seed","mods","undefined","_jsxs","_Fragment","concat","onClick","id","String","join","role","title","Object","keys","map","i","makeDaily","times","returnable","todayOfWeek","getDailyTimeString","z","dayIndex","lastWeek","blank","dailyObj","getDailyChallenge","dailyValue","getDailyHeliumValueDaily","countDailyWeightDaily","getPrettyTimeString","reduce","prev","curr","hasOwnProperty","findColor","lastSeed","tiers","add","getDayOfWeek","today","Date","setUTCDate","getUTCDate","getUTCDay","year","getUTCFullYear","month","getUTCMonth","day","seedStr","getRandomIntSeeded","minIncl","maxExcl","toReturn","sin","seededRandom","everythingInArrayGreaterEqual","smaller","bigger","dateSeed","Number","weightTarget","modifierList","totalChance","dailyObject","item","chanceMod","currentWeight","maxLoops","sizeCount","sizeTarget","mainLoop","maxZLoops","firstChoice","selectedIndex","roll","checkedTotal","y","selectedMod","modObj","modWeight","modSize","splice","incompatibleIndex","indexOf","daily","weight","maybeMakeDaily","force","newestSeed","dailies","Button","label","variant","type","Input","onChange","defaultValue","disabled","MemoInput","React","memo","Label","filterTypes","toMatch","FilterBox","updateDailiesFiltered","useContext","DailyContext","setEnabled","Filter","_useState3","_useState4","showFilter","setShowFilter","_useState5","_useState6","flipAll","setFlipAll","filter","idx","e","target","createContext","DailyProvider","setDailies","Provider","updateDailies","goodMods","_loop","matched","forEach","document","getElementById","style","visibility","forceDailies","UniverseSwitch","handleClick","clickedNumber","days","Daily","extend","require","fluffyInstance","_createClass","_this","_classCallCheck","string","name","firstLevel","iceBonus","expBonus","exp","purchasedFluffyPrestigeBonus","purchasedFluffyExpBonus","zoneYouPortal","dailyBonus","heirloomBonus","graphNextIce","spiresCompleted","instantUpdating","minutesPerRun","averageWorshippers","frigidCompletions","currentExp","traps","autoBattle","portal","displayData","xpPerRun","currentZone","table","levelUpTable","percentToLevel","bonesToLevel","XPhr","save","fluffyExp","fluffyExp2","fluffyPrestige","fluffyPrestige2","lastPortal","lastRadonPortal","bestFluffyExp","zone","atMaxEvo","getLevel","getFirstLevel","removeExp","getExpBonus","num","getExpGrowth","owned","oneTimers","Battlescruff","maxEnemyLevel","getUpgradeExp","expInLevel","getMinZoneForExp","Classy","getBaseExp","xpFromZone","start","end","mcalc1","mcalc2","minimumZone","Curious","Cunning","addSpireBonus","spireNumber","total","spireXP","getHeirloomValue","bonus","b","getTableCell","prevRuns","getTableData","data","runs","startingLevel","lev","getLevelUpTable","maxZone","zoneLastLeveled","currentRelativeExp","neededExpForLevel","key","_objectSpread","_defineProperty","updateUniverse","getDailyBonus","updateDisplayData","pasteSaveActions","gameSave","stats","valueTotal","world","heirlooms","Staff","FluffyExp","currentBonus","autoBattleData","dailyChallenge","talents","purchased","jobs","Worshipper","fluffyAbility","playerSpire","Knowledge","uberNature","empowerments","Ice","saveLocalStorage","localStorage","setItem","JSON","stringify","getLocalStorage","_saveObj$instantUpdat","_saveObj$minutesPerRu","_saveObj$spiresComple","saveObj","parse","getItem","changeVar","Capable","split","active","getDailyHeliumValue","FluffyContext","FluffyProvider","fluffyInstances","setFluffyInstance","shown","setShown","anotherInstance","console","old","_toConsumableArray","TrueFalseButton","colors","isActive","setIsActive","colorClasses","MemoTrueFalseButton","InputSection","index","_instance$portal","_instance$portal$Capa","_instance$portal2","_instance$portal2$Cun","_instance$portal3","_instance$portal3$Cur","_instance$portal4","_instance$portal4$Cla","instance","renderParent","labels","innerText","handleInput","locked","prevProps","nextProps","LevelUpTable","sformat","s","v","RunTimeTable","second","time","cell","Stats","addCommas","width","SaveBox","onPaste","show","setShow","textRef","useRef","current","ref","placeholder","MemoSaveBox","Template","_instance$string","setUpdate","useEffect","forceRefresh","useCallback","changeUniverse","ev","_JSON$parse","save_string","clipboardData","getData","decompressFromBase64","handle_paste","Fluffy","_useContext","xmlns","viewBox","d","TITLES","swapTheme","to","body","classList","ThemeSwitcher","contains","Tab","location","Link","NavBar","useLocation","currentLocation","pathname","App","HashRouter","basename","hashType","Switch","Route","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.690c8278.chunk.js","sourcesContent":["export var dailyModifiers = {\n  minDamage: {\n    description: function (str) {\n      return (\n        \"Trimp min damage reduced by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return 0.1 + (str - 1) * 0.01;\n    },\n    getWeight: function (str) {\n      return 1 / ((1.2 + (1 - this.getMult(str))) / 2 / 1.1) - 1;\n    },\n    minMaxStep: [41, 90, 1],\n    chance: 1,\n  },\n  maxDamage: {\n    description: function (str) {\n      return (\n        \"Trimp max damage increased by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      return 1 - (1.2 + (1 + str)) / 2 / 1.1;\n    },\n    minMaxStep: [1, 5, 0.25],\n    chance: 1,\n  },\n  plague: {\n    //Half of electricity\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, damaging Trimps for \" +\n        prettify(this.getMult(str, 1) * 100) +\n        \"% of total health per turn per stack, resets on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil((1 + Math.sqrt(1 + 800 / str)) / 2);\n      return (6 - 0.1 * count + 0.8 / count + str / 8) / 1.75;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.3,\n    icon: \"*bug2\",\n    incompatible: [\"rampage\", \"weakness\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are taking \" +\n        prettify(this.getMult(str, stacks) * 100) +\n        \"% damage after each attack.\"\n      );\n    },\n  },\n  weakness: {\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, reducing Trimp attack by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% per stack. Stacks cap at 9 and reset on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 1 - 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      return str / 4;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.6,\n    icon: \"fire\",\n    incompatible: [\"bogged\", \"plague\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps have \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% less attack.\"\n      );\n    },\n  },\n  large: {\n    description: function (str) {\n      return (\n        \"All housing can store \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% fewer Trimps\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) * 2;\n    },\n    minMaxStep: [10, 60, 1],\n    chance: 1,\n  },\n  dedication: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more resources from gathering\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.1 * str;\n    },\n    getWeight: function (str) {\n      return 0.075 * str * -1;\n    },\n    incompatible: [\"famine\"],\n    minMaxStep: [5, 40, 1],\n    chance: 0.75,\n  },\n  famine: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less Metal, Food, Wood, and Gems from all sources\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 2;\n    },\n    incompatible: [\"dedication\"],\n    minMaxStep: [40, 80, 1],\n    chance: 2,\n  },\n  badStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * str;\n    },\n    minMaxStep: [5, 15, 1],\n    chance: 1,\n  },\n  badHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.2 * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * (1 + 1 / 3) * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.3 * str * (5 / 8);\n    },\n    minMaxStep: [3, 10, 1],\n    chance: 1,\n  },\n  crits: {\n    description: function (str) {\n      return (\n        \"Enemies have a 25% chance to crit for \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of normal damage.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.5 * str;\n    },\n    getWeight: function (str) {\n      return 0.15 * this.getMult(str);\n    },\n    minMaxStep: [1, 24, 1],\n    chance: 0.75,\n  },\n  trimpCritChanceUp: {\n    description: function (str) {\n      return (\n        \"Your Trimps have +\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return 0.25 * str * -1;\n    },\n    minMaxStep: [5, 10, 1],\n    incompatible: [\"trimpCritChanceDown\"],\n    chance: 1.25,\n  },\n  trimpCritChanceDown: {\n    description: function (str) {\n      return (\n        \"Your Trimps have -\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return str / 4.5;\n    },\n    minMaxStep: [2, 7, 1],\n    incompatible: [\"trimpCritChanceUp\"],\n    chance: 0.75,\n  },\n  bogged: {\n    description: function (str) {\n      return (\n        \"Your Trimps lose \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their max health after each attack.\"\n      );\n    },\n    getMult: function (str) {\n      return 0.01 * str;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil(1 / this.getMult(str));\n      return (\n        (6 -\n          (0.2 * (count > 60 ? 60 : count)) / 2 +\n          ((500 * count + 400) / count / 500 - 1)) /\n        1.5\n      );\n    },\n    incompatible: [\"rampage\", \"weakness\"],\n    minMaxStep: [1, 5, 1],\n    chance: 0.3,\n  },\n  dysfunctional: {\n    description: function (str) {\n      return (\n        \"Your Trimps breed \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% slower\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.05;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 6;\n    },\n    minMaxStep: [10, 18, 1],\n    chance: 1,\n  },\n  oddTrimpNerf: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less attack on odd numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.02;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 1.5;\n    },\n    minMaxStep: [15, 40, 1],\n    chance: 1,\n  },\n  evenTrimpBuff: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more attack on even numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + str * 0.2;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str) - 1) * -1;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  karma: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing all non \" +\n        heliumOrRadon(false, true) +\n        \" loot by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"%. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are finding \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more loot!\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return 1 + 0.0015 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str, this.getMaxStacks(str)) - 1) / -2;\n    },\n    icon: \"*arrow-up\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  toxic: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, reducing breed speed by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% (compounding). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are breeding \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% slower.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return Math.pow(1 - 0.001 * realStrength, stacks);\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str, this.getMaxStacks(str)) - 1) / 6;\n    },\n    icon: \"*radioactive\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  bloodthirst: {\n    description: function (str) {\n      return (\n        \"Enemies gain a stack of Bloodthirst whenever Trimps die. Every \" +\n        this.getFreq(str) +\n        \" stacks, enemies will heal to full and gain an additive 50% attack. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \" and reset after killing an enemy.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      var freq = this.getFreq(str);\n      var max = this.getMaxStacks(str);\n      var text = \"This Bad Guy\";\n      if (stacks < max) {\n        var next = freq - (stacks % freq);\n        text +=\n          \" will heal to full and gain attack in \" +\n          next +\n          \" stack\" +\n          (next === 1 ? \"\" : \"s\") +\n          \", \" +\n          (stacks >= freq ? \"\" : \" and\") +\n          \" gains 1 stack whenever Trimps die\";\n      }\n      if (stacks >= freq) {\n        if (stacks < max) text += \", and\";\n        text +=\n          \" currently has \" +\n          prettify(this.getMult(str, stacks) * 100 - 100) +\n          \"% more attack\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMaxStacks: function (str) {\n      return this.getFreq(str) * (2 + Math.floor(str / 2));\n    },\n    getFreq: function (str) {\n      return 10 - str;\n    },\n    getMult: function (str, stacks) {\n      var count = Math.floor(stacks / this.getFreq(str));\n      return 1 + 0.5 * count;\n    },\n    getWeight: function (str) {\n      return 0.5 + 0.25 * Math.floor(str / 2);\n    },\n    minMaxStep: [1, 7, 1],\n    chance: 1,\n    icon: \"*flask\",\n    iconOnEnemy: true,\n  },\n  explosive: {\n    description: function (str) {\n      var text =\n        \"Enemies instantly deal \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their attack damage when killed\";\n      if (str > 15) {\n        text += \" unless your block is as high as your maximum health\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      var mult = this.getMult(str);\n      if (str <= 15) {\n        return (3 / 20) * mult + 1 / 4;\n      } else {\n        return (1 / 14) * mult - 1 / 7;\n      }\n    },\n    get minMaxStep() {\n      if (window.daily_universe === 1) return [5, 30, 1];\n      return [5, 10, 1];\n    },\n    chance: 1,\n  },\n  slippery: {\n    description: function (str) {\n      return (\n        \"Enemies have a \" +\n        prettify(this.getMult(str) * 100) +\n        \"% chance to dodge your attacks on \" +\n        (str <= 15 ? \"odd\" : \"even\") +\n        \" Zones.\"\n      );\n    },\n    getMult: function (str) {\n      if (str > 15) str -= 15;\n      return 0.02 * str;\n    },\n    getWeight: function (str) {\n      return ((1 / (1 - this.getMult(str)) - 1) * 10) / 1.5;\n    },\n    minMaxStep: [1, 30, 1],\n    chance: 1,\n  },\n  rampage: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing Trimp attack by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"% (additive). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset when your Trimps die.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are dealing \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more damage.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor(((str % 10) + 1) * 10);\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 10);\n      return 1 + 0.01 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (1 - this.getMult(str, 1)) * this.getMaxStacks(str);\n    },\n    icon: \"*fire\",\n    incompatible: [\"plague\", \"bogged\"],\n    minMaxStep: [1, 40, 1],\n    chance: 1,\n  },\n  mutimps: {\n    description: function (str) {\n      var size = str % 5;\n      if (size === 0) size = \"\";\n      else size = \"the first \" + prettify(size * 2) + \" rows of\";\n\n      var name = str < 4 ? \"Mutimps\" : \"Hulking Mutimps\";\n      return (\n        \"40% of Bad Guys in \" +\n        size +\n        \" the World will be mutated into \" +\n        name +\n        \".\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 10) * 1.5;\n    },\n    getMaxCellNum: function (str) {\n      if (str > 5) str -= 5;\n      str--;\n      var values = [19, 39, 59, 79, 99];\n      return values[str];\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  empower: {\n    description: function (str) {\n      var s = str === 1 ? \"\" : \"s\";\n      return (\n        \"All enemies gain \" +\n        str +\n        \" stack\" +\n        s +\n        \" of Empower whenever your Trimps die in the World. Empower increases the attack and health of Bad Guys in the World by 0.2% per stack, can stack to 9999, and never resets.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 6) * 2;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"This Bad Guy is Empowered and has \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more health and attack.\"\n      );\n    },\n    stacksToAdd: function (str) {\n      return str;\n    },\n    getMult: function (str, stacks) {\n      return 1 + 0.002 * stacks;\n    },\n    getMaxStacks: function (str) {\n      return 9999;\n    },\n    worldStacksOnly: true,\n    iconOnEnemy: true,\n    icon: \"baby-formula\",\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  pressure: {\n    description: function (str) {\n      return (\n        \"Trimps gain a stack of Pressure every \" +\n        Math.round(this.timePerStack(str)) +\n        \" seconds. Each stack of pressure reduces Trimp health by 1%. Max of \" +\n        Math.round(this.getMaxStacks(str)) +\n        \" stacks, stacks reset after clearing a Zone.\"\n      );\n    },\n    getWeight: function (str) {\n      var time = 105 - this.timePerStack(str);\n      var stacks = this.getMaxStacks(str);\n      return (time * 1.3 + stacks) / 200;\n    },\n    getMult: function (str, stacks) {\n      return Math.pow(0.99, stacks);\n    },\n    timePerStack: function (str) {\n      var thisStr = Math.ceil(str / 4) - 1;\n      return 45 + thisStr * 5;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are under a lot of pressure. Maximum health is reduced by \" +\n        prettify((1 - this.getMult(str, stacks)) * 100) +\n        \"%.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      var thisStr = Math.floor(str % 4);\n      return 45 + thisStr * 5;\n    },\n    icon: \"*heart3\",\n    minMaxStep: [1, 16, 1],\n    chance: 1,\n  },\n  mirrored: {\n    description: function (str) {\n      var reflectChance = this.getReflectChance(str);\n      return (\n        \"Enemies have a\" +\n        (reflectChance.toString()[0] === \"8\" ? \"n\" : \"\") +\n        \" \" +\n        prettify(reflectChance) +\n        \"% chance to reflect an attack, dealing \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of damage taken back to your Trimps.\"\n      );\n    },\n    getReflectChance: function (str) {\n      return Math.ceil(str / 10) * 10;\n    },\n    getMult: function (str) {\n      return ((str % 10) + 1) / 10;\n    },\n    getWeight: function (str) {\n      return (\n        ((this.getReflectChance(str) + 90) / 100) *\n        0.85 *\n        ((this.getMult(str) + 0.9) * 0.85)\n      );\n    },\n    testWeights: function () {\n      var min = 0;\n      var max = 0;\n      var results = [];\n      for (\n        var x = this.minMaxStep[0];\n        x <= this.minMaxStep[1];\n        x += this.minMaxStep[2]\n      ) {\n        var result = this.getWeight(x);\n        if (min === 0) min = result;\n        else if (result < min) min = result;\n        if (result > max) max = result;\n        results.push(result);\n      }\n      return \"Min: \" + min + \", Max: \" + max;\n    },\n    reflectDamage: function (str, attack) {\n      if (Math.floor(Math.random() * 100) >= this.getReflectChance(str))\n        return 0;\n      return this.getMult(str) * attack;\n    },\n    minMaxStep: [1, 100, 1],\n    chance: 1,\n  },\n  metallicThumb: {\n    description: function (str) {\n      return (\n        \"Equipment is \" + prettify((1 - this.getMult(str)) * 100) + \"% cheaper.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str + 3) / 26;\n    },\n    getMult: function (str) {\n      return 1 - (str / 100) * 5;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  hemmorrhage: {\n    description: function (str) {\n      var res = this.getResources(str);\n      var text = \"Every 15 seconds, your stored \";\n      for (var x = 1; x < res.length; x++) {\n        if (x === 2) {\n          if (res.length === 3) text += \" and \";\n          else text += \", \";\n        } else if (x === 3) {\n          text += \", and \";\n        }\n        text += res[x].charAt(0).toUpperCase() + res[x].slice(1);\n      }\n      text += \" is reduced by \" + prettify(res[0]) + \"%\";\n      return text;\n    },\n    getResources: function (str) {\n      str = str + \"\";\n      var strength = str.length >= 4 ? parseInt(str[3], 0) : 0;\n      strength = 25 + strength * 5;\n      var res = [strength];\n      if (parseInt(str[0], 10) < 7) res.push(\"food\");\n      if (str.length < 2) {\n        if (res.length < 2) res.push(\"food\");\n        return res;\n      }\n      if (parseInt(str[1], 10) < 7) res.push(\"wood\");\n      if (str.length < 3) {\n        if (res.length < 2) res.push(\"wood\");\n        return res;\n      }\n      if (parseInt(str[2], 10) < 7) res.push(\"metal\");\n      if (res.length < 2) res.push(\"metal\");\n      return res;\n    },\n    getWeight: function (str) {\n      var res = this.getResources(str);\n      var base = 0.3 * res.length * (1 + res[0] / 50);\n      return base;\n    },\n    blockU1: true,\n    minMaxStep: [0, 9999, 1],\n    chance: 2,\n  },\n  /* \t\tdisarmed: {\n\t\t\tequipmentList: [\"Boots\", \"Mace\", \"Helmet\", \"Polearm\", \"Pants\", \"Battleaxe\", \"Shoulderguards\", \"Greatsword\", \"Breastplate\", \"Arbalest\", \"Gambeson\"],\n\t\t\tdescription: function (str) {\n\t\t\t\treturn \"You can't use something\"\n\t\t\t},\n\t\t\tgetBannedEquipment(str, checkOne){\n\t\t\t\tif (checkOne) return (this.equipmentList.indexOf(checkOne) < str);\n\t\t\t},\n\t\t\tminMaxStep: [1, 11, 1],\n\t\t\tchance: 1\n\t\t} */\n};\n\nexport function prettify(number) {\n  var numberTmp = number;\n  // if (!isFinite(number)) return \"<span class='icomoon icon-infinity'></span>\";\n  if (number >= 1000 && number < 10000) return Math.floor(number);\n  if (number === 0) return prettifySub(0);\n  if (number < 0) return \"-\" + prettify(-number);\n  if (number < 0.005) return (+number).toExponential(2);\n\n  var base = Math.floor(Math.log(number) / Math.log(1000));\n  if (base <= 0) return prettifySub(number);\n\n  if (game.options.menu.standardNotation.enabled === 5) {\n    //Thanks ZXV\n    var logBase = game.global.logNotBase;\n    var exponent = Math.log(number) / Math.log(logBase);\n    return prettifySub(exponent) + \"L\" + logBase;\n  }\n\n  number /= Math.pow(1000, base);\n  if (number >= 999.5) {\n    // 999.5 rounds to 1000 and we don’t want to show “1000K” or such\n    number /= 1000;\n    ++base;\n  }\n  if (game.options.menu.standardNotation.enabled === 3) {\n    var suffices = [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    if (base <= suffices.length) var suffix = suffices[base - 1];\n    else {\n      var suf2 = (base % suffices.length) - 1;\n      if (suf2 < 0) suf2 = suffices.length - 1;\n      suffix = suffices[Math.ceil(base / suffices.length) - 2] + suffices[suf2];\n    }\n  } else {\n    suffices = [\n      \"K\",\n      \"M\",\n      \"B\",\n      \"T\",\n      \"Qa\",\n      \"Qi\",\n      \"Sx\",\n      \"Sp\",\n      \"Oc\",\n      \"No\",\n      \"Dc\",\n      \"Ud\",\n      \"Dd\",\n      \"Td\",\n      \"Qad\",\n      \"Qid\",\n      \"Sxd\",\n      \"Spd\",\n      \"Od\",\n      \"Nd\",\n      \"V\",\n      \"Uv\",\n      \"Dv\",\n      \"Tv\",\n      \"Qav\",\n      \"Qiv\",\n      \"Sxv\",\n      \"Spv\",\n      \"Ov\",\n      \"Nv\",\n      \"Tg\",\n      \"Utg\",\n      \"Dtg\",\n      \"Ttg\",\n      \"Qatg\",\n      \"Qitg\",\n      \"Sxtg\",\n      \"Sptg\",\n      \"Otg\",\n      \"Ntg\",\n      \"Qaa\",\n      \"Uqa\",\n      \"Dqa\",\n      \"Tqa\",\n      \"Qaqa\",\n      \"Qiqa\",\n      \"Sxqa\",\n      \"Spqa\",\n      \"Oqa\",\n      \"Nqa\",\n      \"Qia\",\n      \"Uqi\",\n      \"Dqi\",\n      \"Tqi\",\n      \"Qaqi\",\n      \"Qiqi\",\n      \"Sxqi\",\n      \"Spqi\",\n      \"Oqi\",\n      \"Nqi\",\n      \"Sxa\",\n      \"Usx\",\n      \"Dsx\",\n      \"Tsx\",\n      \"Qasx\",\n      \"Qisx\",\n      \"Sxsx\",\n      \"Spsx\",\n      \"Osx\",\n      \"Nsx\",\n      \"Spa\",\n      \"Usp\",\n      \"Dsp\",\n      \"Tsp\",\n      \"Qasp\",\n      \"Qisp\",\n      \"Sxsp\",\n      \"Spsp\",\n      \"Osp\",\n      \"Nsp\",\n      \"Og\",\n      \"Uog\",\n      \"Dog\",\n      \"Tog\",\n      \"Qaog\",\n      \"Qiog\",\n      \"Sxog\",\n      \"Spog\",\n      \"Oog\",\n      \"Nog\",\n      \"Na\",\n      \"Un\",\n      \"Dn\",\n      \"Tn\",\n      \"Qan\",\n      \"Qin\",\n      \"Sxn\",\n      \"Spn\",\n      \"On\",\n      \"Nn\",\n      \"Ct\",\n      \"Uc\",\n    ];\n    if (\n      game.options.menu.standardNotation.enabled === 2 ||\n      (game.options.menu.standardNotation.enabled === 1 &&\n        base > suffices.length) ||\n      (game.options.menu.standardNotation.enabled === 4 && base > 31)\n    )\n      suffix = \"e\" + base * 3;\n    else if (\n      game.options.menu.standardNotation.enabled &&\n      base <= suffices.length\n    )\n      suffix = suffices[base - 1];\n    else {\n      exponent = parseFloat(numberTmp).toExponential(2);\n      exponent = exponent.replace(\"+\", \"\");\n      return exponent;\n    }\n  }\n  return prettifySub(number) + suffix;\n}\n\nfunction prettifySub(number) {\n  number = parseFloat(number);\n  var floor = Math.floor(number);\n  if (number === floor)\n    // number is an integer, just show it as-is\n    return number;\n  // var precision = 3 - floor.toString().length; // use the right number of digits\n\n  return number.toFixed(3 - floor.toString().length);\n}\nfunction heliumOrRadon() {\n  return window.daily_universe === 1 ? \"Helium\" : \"Radon\";\n}\n\nvar game = {\n  options: {\n    menu: {\n      standardNotation: {\n        enabled: 4,\n      },\n    },\n  },\n};\n\nvar rewards = [\n  \"stickler\",\n  \"helium\",\n  \"liquid\",\n  \"purifier\",\n  \"lucky\",\n  \"void\",\n  \"helium\",\n  \"liquid\",\n  \"eliminator\",\n  \"overkiller\",\n];\nvar prestigeRewards = [\n  \"dailies\",\n  \"voidance\",\n  \"overkiller\",\n  \"critChance\",\n  \"megaCrit\",\n  \"superVoid\",\n  \"voidelicious\",\n  \"naturesWrath\",\n  \"voidSiphon\",\n  \"plaguebrought\",\n];\nvar rewardsU2 = [\n  \"trapper\",\n  \"prism\",\n  \"heirloopy\",\n  \"radortle\",\n  \"healthy\",\n  \"wealthy\",\n  \"critChance\",\n  \"gatherer\",\n  \"dailies\",\n  \"exotic\",\n  \"shieldlayer\",\n  \"tenacity\",\n  \"megaCrit\",\n  \"critChance\",\n  \"smithy\",\n  \"biggerbetterheirlooms\",\n];\n\n// Heirloopy\n// universe === 2 => level === 3 or 2 (depending on talent)\n\n// Dailies\n// universe === 2 => level === 9 or 8 (depending on talent);\n// universe === 1 => 11 - prestige - (?1) >= 0\n\nexport function isRewardActive(\n  reward,\n  universe,\n  evolution,\n  level,\n  boughtEarly\n) {\n  let minus = boughtEarly ? 1 : 0;\n  switch (reward) {\n    case \"dailies\":\n      if (universe === 1) {\n        if (11 - evolution - minus - level <= 0) {\n          return true;\n        }\n      } else {\n        if (level >= 9 - minus) {\n          return true;\n        }\n      }\n      break;\n    case \"heirloopy\":\n      if (universe === 2) {\n        if (level >= 3 - minus) {\n          return true;\n        }\n      }\n      break;\n    default:\n  }\n  return false;\n}\n\nexport function getDailyHeliumValue(weight, active) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  if (active) value += 100;\n  return value;\n}\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { DailyType } from \"../../calculators/daily\";\nimport { dailyModifiers } from \"../../calculators/main\";\n\nexport const WeekBox = function WeekBox({ text }: { text: string }) {\n  return (\n    <div\n      className={clsx(\n        baseBox,\n        \"flex items-center justify-center text-xxs select-none sm:text-xs md:text-base\"\n      )}\n    >\n      {text}\n    </div>\n  );\n};\n\nconst baseBox = \"w-11 h-11 sm:h-16 sm:w-16 md:w-24 md:h-24\";\n\ninterface Props {\n  object: DailyType;\n}\n\nfunction Box({ object }: Props) {\n  const [expanded, setExpanded] = useState(false);\n\n  const { value, date, next, preview, tier, seed, mods } = object;\n\n  if (value === undefined) return <div className={baseBox}></div>;\n\n  return (\n    <>\n      <div\n        className={clsx(\n          `bg-tier${tier}`,\n          baseBox,\n          \"relative flex flex-col items-center justify-center text-black rounded shadow cursor-pointer select-none\"\n        )}\n        onClick={() => setExpanded(!expanded)}\n        id={String(seed)}\n      >\n        <div className=\"absolute top-0 text-xxxxs sm:text-xxs md:text-xs\">\n          {date}\n        </div>\n        <div className=\"text-xxs sm:text-base md:text-xl\">{`${value.toFixed(\n          1\n        )}%`}</div>\n        <div className=\"absolute bottom-0 text-xxxs md:text-xs\">\n          {preview.join(\"\")}\n          {next && (\n            <span role=\"img\" title=\"This is the next daily\">\n              ⭐\n            </span>\n          )}\n        </div>\n      </div>\n\n      {expanded && (\n        <span className=\"col-span-7 justify-self-center p-2 w-de bg-secondary border border-solid border-prpl rounded sm:w-deSM md:w-deMD\">\n          <p className=\"whitespace-pre-wrap text-xxxs sm:text-xs md:text-base\">\n            {date + \"\\n\"}\n            {Object.keys(mods).map((x, i) => {\n              return (\n                \" → \" + dailyModifiers[x].description(mods[x].strength) + \"\\n\"\n              );\n            })}\n            {\"Bonus is \" + value.toFixed(1) + \"%\"}\n          </p>\n        </span>\n      )}\n    </>\n  );\n}\n\nexport default Box;\n","import { dailyModifiers } from \"./main\";\n\nvar mods = {\n  empower: \"E\",\n  explosive: \"e\",\n  toxic: \"T\",\n  pressure: \"P\",\n  plague: \"p\",\n  bogged: \"B\",\n  trimpCritChanceUp: \"+\",\n  trimpCritChanceDown: \"-\",\n  weakness: \"W\",\n  minDamage: \"m\",\n  maxDamage: \"M\",\n  badHealth: \"H\",\n  rampage: \"D\",\n  karma: \"K\",\n  hemmorrhage: \"h\",\n};\n\ndeclare const window: any;\nwindow.daily_universe = 1;\n\nexport type DailyType = {\n  value?: number;\n  date?: string;\n  next?: boolean;\n  mods?: Partial<DailyMods>;\n  preview?: string[];\n  tier?: 1 | 2 | 3;\n  seed?: number;\n};\n\nexport function makeDaily(times): Partial<DailyType>[] {\n  let returnable: DailyType[] = [];\n  var todayOfWeek: number = getDailyTimeString(0, true);\n  for (var z = 0; z < 8; z++) {\n    var dayIndex = todayOfWeek * -1 + z;\n    if (dayIndex > -1) {\n      dayIndex = z - todayOfWeek - 7;\n    }\n  }\n  var lastWeek = dayIndex - 7;\n  var blank = lastWeek - dayIndex + 1;\n  if (lastWeek === -13) {\n    lastWeek = -6;\n    blank = -7;\n  }\n\n  for (var x = lastWeek; x < times; x++) {\n    let dailyObj = getDailyChallenge(x);\n    let seed = dailyObj.seed;\n    delete dailyObj[\"seed\"];\n    let dailyValue = getDailyHeliumValueDaily(countDailyWeightDaily(dailyObj));\n    if (x < blank) {\n      returnable.push({});\n      continue;\n    }\n    // console.log(dailyObj);\n    returnable.push({\n      value: dailyValue,\n      date: getPrettyTimeString(x),\n      next: x === 1 ? true : false,\n      mods: dailyObj,\n      preview: Object.keys(dailyObj).reduce((prev, curr) => {\n        if (curr === \"seed\") return prev;\n        if (mods.hasOwnProperty(curr)) {\n          prev.push(mods[curr]);\n        }\n        return prev;\n      }, []),\n      tier: findColor(dailyValue),\n      seed: seed,\n    });\n    // console.log(returnable);\n  }\n  return returnable;\n}\n\nvar tiers = [225, 335, 425];\n\nfunction findColor(value) {\n  if (value <= tiers[0]) {\n    return 1;\n  } else if (value <= tiers[1] && value > tiers[0]) {\n    return 2;\n  } else if (value > tiers[1]) {\n    return 3;\n  }\n}\n\nfunction getDailyTimeString(add: number, getDayOfWeek?: boolean): number {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  if (getDayOfWeek) return today.getUTCDay();\n  var year = today.getUTCFullYear();\n  var month: string | number = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: string | number = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  var seedStr: string | number = String(year) + String(month) + String(day);\n  seedStr = parseInt(seedStr);\n  return seedStr;\n}\n\nfunction getPrettyTimeString(add: number): string {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  var year = today.getUTCFullYear();\n  var month: number | string = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: number | string = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  return year + \"-\" + month + \"-\" + day;\n}\n\nfunction getRandomIntSeeded(seed: number, minIncl: number, maxExcl: number) {\n  var toReturn = Math.floor(seededRandom(seed) * (maxExcl - minIncl)) + minIncl;\n  return toReturn === maxExcl ? minIncl : toReturn;\n}\n\nfunction seededRandom(seed: number) {\n  var x = Math.sin(seed++) * 10000;\n  return parseFloat((x - Math.floor(x)).toFixed(7));\n}\n\nfunction everythingInArrayGreaterEqual(smaller, bigger) {\n  if (bigger.length < smaller.length) return false;\n  for (var x = 0; x < smaller.length; x++) {\n    if (smaller[x] > bigger[x]) return false;\n  }\n  return true;\n}\n\nexport type DailyMods = {\n  seed: number;\n  empower?: object;\n  explosive?: object;\n  toxic?: object;\n  pressure?: object;\n  plague?: object;\n  bogged?: object;\n  trimpCritChanceUp?: object;\n  trimpCritChanceDown?: object;\n  weakness?: object;\n  minDamage?: object;\n  maxDamage?: object;\n  badHealth?: object;\n  rampage?: object;\n  karma?: object;\n  hemmorrhage?: object;\n};\n\nfunction getDailyChallenge(add: number) {\n  // checkCompleteDailies();\n  var dateSeed = getDailyTimeString(add);\n  var seedStr = getRandomIntSeeded(Number(dateSeed) + 2, 1, 1e9);\n  //seedStr = getRandomIntSeeded(seedStr, 1, 1e9);\n  var weightTarget = getRandomIntSeeded(seedStr++, 25, 51) / 10;\n  //Build a list of all modifiers to choose from\n  var modifierList = [];\n  var totalChance = 0;\n  var dailyObject: Partial<DailyMods> = {};\n  for (var item in dailyModifiers) {\n    if (window.daily_universe === 1 && dailyModifiers[item].blockU1) continue;\n    modifierList.push(item);\n    totalChance += dailyModifiers[item].chance;\n  }\n  var chanceMod = 1000 / totalChance;\n  var currentWeight = 0;\n  var maxLoops = modifierList.length;\n  var sizeCount = [0, 0, 0]; // < 0.3, < 1, >= 1\n  var sizeTarget = [\n    getRandomIntSeeded(seedStr++, 0, 2),\n    getRandomIntSeeded(seedStr++, 1, 5),\n    getRandomIntSeeded(seedStr++, 2, 6),\n  ];\n  if (weightTarget < 2.75) {\n    sizeTarget[2] = 0;\n    sizeTarget[0] += 2;\n  }\n  mainLoop: for (var x = 0; x < maxLoops; x++) {\n    var maxZLoops = modifierList.length;\n    var firstChoice = [];\n    for (var z = 0; z < maxZLoops; z++) {\n      var roll = getRandomIntSeeded(seedStr++, 0, 1000);\n      var selectedIndex;\n      var checkedTotal = 0;\n      for (var y = 0; y < modifierList.length; y++) {\n        checkedTotal += dailyModifiers[modifierList[y]].chance * chanceMod;\n        if (roll < checkedTotal || y === modifierList.length - 1) {\n          totalChance -= dailyModifiers[modifierList[y]].chance;\n          chanceMod = 1000 / totalChance;\n          selectedIndex = y;\n          break;\n        }\n      }\n      var selectedMod = modifierList[selectedIndex];\n      var modObj = dailyModifiers[selectedMod];\n      var str =\n        modObj.minMaxStep[0] +\n        getRandomIntSeeded(\n          seedStr++,\n          0,\n          Math.floor(\n            (modObj.minMaxStep[1] + modObj.minMaxStep[2]) *\n              (1 / modObj.minMaxStep[2])\n          ) - modObj.minMaxStep[0]\n        ) *\n          modObj.minMaxStep[2];\n      var modWeight = modObj.getWeight(str);\n      var modSize = modWeight < 0.85 ? 0 : modWeight < 1.85 ? 1 : 2;\n      if (modWeight + currentWeight > weightTarget + 1) continue;\n      if (everythingInArrayGreaterEqual(sizeTarget, sizeCount)) {\n        //use it and stuff\n      } else if (\n        sizeCount[modSize] >= sizeTarget[modSize] &&\n        z !== maxZLoops - 1\n      ) {\n        if (!firstChoice.length)\n          firstChoice = [selectedMod, str, selectedIndex, modSize, modWeight];\n        continue;\n      } else if (z === maxZLoops - 1 && firstChoice.length) {\n        selectedMod = firstChoice[0];\n        modObj = dailyModifiers[selectedMod];\n        selectedIndex = firstChoice[2];\n        str = firstChoice[1];\n        modSize = firstChoice[3];\n        modWeight = firstChoice[4];\n      }\n      //It's been officially selected by this point\n      sizeCount[modSize]++;\n      dailyObject[modifierList[selectedIndex]] = {\n        strength: str,\n        stacks: 0,\n      };\n      currentWeight += modWeight;\n      if (\n        x > 0 &&\n        (currentWeight > weightTarget ||\n          (currentWeight >= weightTarget - 0.5 &&\n            currentWeight <= weightTarget + 0.5))\n      ) {\n        break mainLoop;\n      }\n      modifierList.splice(selectedIndex, 1);\n      if (modObj.incompatible) {\n        for (let x = 0; x < modObj.incompatible.length; x++) {\n          //jshint ignore:line\n          var incompatibleIndex = modifierList.indexOf(modObj.incompatible[x]);\n          if (incompatibleIndex >= 0) {\n            modifierList.splice(incompatibleIndex, 1);\n          }\n        }\n      }\n      break;\n    }\n  }\n  dailyObject.seed = Number(dateSeed);\n  // console.log(dailyObject);\n  return dailyObject;\n}\n\nexport function countDailyWeightDaily(daily) {\n  var weight = 0;\n  let dailyObj = daily;\n  for (var item in dailyObj) {\n    if (item === \"seed\") continue;\n    weight += dailyModifiers[item].getWeight(dailyObj[item].strength);\n  }\n  return weight;\n}\n\nexport function getDailyHeliumValueDaily(weight) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  return value;\n}\n\nlet lastSeed;\n\nexport function maybeMakeDaily(times, force) {\n  let newestSeed = getDailyTimeString(0);\n  if (lastSeed === newestSeed && force === false) {\n    return [];\n  } else {\n    let dailies = makeDaily(times);\n    lastSeed = newestSeed;\n    return dailies;\n  }\n}\n\nmakeDaily(24);\n","import clsx from \"clsx\";\nimport React from \"react\";\n\ninterface Props {\n  onClick?: (e?: any) => void;\n  className?: string;\n  label: string;\n  variant?: \"small\";\n}\n\nfunction Button({ onClick, className, label, variant }: Props) {\n  return (\n    <input\n      type=\"button\"\n      className={clsx(\n        className,\n        variant === \"small\"\n          ? \"p-1 text-xs sm:text-base\"\n          : \" text-sm sm:text-base p-2\",\n        \"self-center bg-secondary border border-solid border-accent rounded focus:outline-none shadow cursor-pointer select-none\"\n      )}\n      onClick={onClick}\n      value={label}\n    />\n  );\n}\n\nexport default Button;\n","import clsx from \"clsx\";\nimport React from \"react\";\n\ninterface Props {\n  onChange?: (e) => void;\n  className?: string;\n  defaultValue?: string | number;\n  value?: string | number;\n  type?: string;\n  min?: number;\n  max?: number;\n  variant?: \"fluffy\";\n  disabled?: true;\n}\n\nconst Input = ({\n  onChange,\n  className,\n  defaultValue,\n  value,\n  type,\n  min,\n  max,\n  variant,\n  disabled,\n}: Props) => {\n  return (\n    <div className=\"relative mt-0.5 rounded shadow\">\n      <input\n        type={variant === \"fluffy\" ? (type ? type : \"number\") : null}\n        onChange={onChange}\n        defaultValue={defaultValue}\n        value={value}\n        min={variant === \"fluffy\" ? (min ? min : 0) : null}\n        max={max}\n        disabled={disabled ?? null}\n        className={clsx(\n          className,\n          \"block p-1 pl-2 w-full text-xs bg-secondary border border-solid border-accent rounded focus:outline-none sm:text-base\"\n        )}\n      />\n    </div>\n  );\n};\n\nexport const MemoInput = React.memo(Input);\n\nexport default Input;\n","import clsx from \"clsx\";\nimport React, { ReactElement } from \"react\";\n\ninterface Props {\n  children: React.ReactChild | React.ReactChild[];\n  className?: string;\n}\n\nexport default function Label({ children, className }: Props): ReactElement {\n  return (\n    <label className={clsx(className, \"block text-left text-xxs sm:text-xs\")}>\n      {children}\n    </label>\n  );\n}\n","import clsx from \"clsx\";\nimport React, { useContext, useState } from \"react\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\nimport Label from \"../utils/Label\";\nimport { DailyContext } from \"./Context\";\n\nexport var filterTypes = {\n  minDamage: true,\n  maxDamage: true,\n  plague: true,\n  weakness: true,\n  large: true,\n  dedication: true,\n  famine: true,\n  badStrength: true,\n  badHealth: true,\n  badMapStrength: true,\n  badMapHealth: true,\n  crits: true,\n  bogged: true,\n  dysfunctional: true,\n  oddTrimpNerf: true,\n  evenTrimpBuff: true,\n  karma: true,\n  toxic: true,\n  bloodthirst: true,\n  explosive: true,\n  slippery: true,\n  rampage: true,\n  mutimps: true,\n  empower: true,\n  pressure: true,\n  mirrored: true,\n  metallicThumb: true,\n  trimpCritChanceUp: true,\n  trimpCritChanceDown: true,\n  hemmorrhage: true,\n};\n\ndeclare const window: any;\n\nexport var toMatch = 2;\n\nfunction FilterBox({ type }: { type: string }) {\n  const { updateDailiesFiltered } = useContext(DailyContext);\n  const [enabled, setEnabled] = useState(filterTypes[type]);\n\n  return (\n    <>\n      <div\n        className={clsx(\n          filterTypes[type] ? \"bg-tier3\" : \"bg-tier1\",\n          \"m-0.5 p-1 w-min text-black text-xxs shadow cursor-pointer select-none sm:text-xs md:text-sm\"\n        )}\n        onClick={() => {\n          filterTypes[type] = !filterTypes[type];\n\n          updateDailiesFiltered();\n\n          setEnabled(!enabled);\n        }}\n      >\n        {type}\n      </div>\n    </>\n  );\n}\n\nfunction Filter() {\n  const [showFilter, setShowFilter] = useState(false);\n  const { updateDailiesFiltered } = useContext(DailyContext);\n\n  // Specifically for forcing component to rerender when updating filter types.\n  const [flipAll, setFlipAll] = useState(false);\n\n  return (\n    <>\n      <Button\n        className=\"my-2\"\n        onClick={() => {\n          setShowFilter(!showFilter);\n        }}\n        label=\"Filter\"\n      />\n\n      {showFilter && (\n        <div className=\"w-11/12 text-center sm:w-9/12 md:w-3/4 lg:w-5/12\">\n          <div className=\"flex flex-wrap justify-center\">\n            {Object.keys(filterTypes)\n              .filter(\n                (type) =>\n                  (type === \"hemmorrhage\" && window.daily_universe === 1) ===\n                  false\n              )\n              .map((type, idx) => {\n                return <FilterBox key={idx} type={type} />;\n              })}\n          </div>\n          <div className=\"flex justify-center mt-2\">\n            <Button\n              className=\"mr-2\"\n              onClick={() => {\n                for (var type in filterTypes) {\n                  filterTypes[type] = !filterTypes[type];\n                }\n\n                setFlipAll(!flipAll);\n\n                updateDailiesFiltered();\n              }}\n              label=\"Flip All\"\n            />\n            <Label className=\"ml-2 w-24\">\n              Match Atleast\n              <Input\n                type=\"number\"\n                onChange={(e) => {\n                  toMatch = Number(e.target.value);\n                  updateDailiesFiltered();\n                }}\n                defaultValue={toMatch}\n              />\n            </Label>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { createContext, useState } from \"react\";\nimport { DailyType, maybeMakeDaily } from \"../../calculators/daily\";\nimport { filterTypes, toMatch } from \"./Filter\";\n\ninterface ContextType {\n  dailies?: DailyType[];\n  updateDailies?: any;\n  updateDailiesFiltered?: any;\n  forceDailies?: any;\n}\n\nexport const DailyContext = createContext<ContextType>({});\n// const initial_dailies = maybeMakeDaily(365);\nconst DailyProvider = ({ children }) => {\n  const [dailies, setDailies] = useState(() => maybeMakeDaily(365, true));\n\n  const updateDailies = () => {\n    const updateDailies = maybeMakeDaily(365, false);\n    if (updateDailies.length === 0) {\n      return;\n    }\n    setDailies(updateDailies);\n  };\n\n  const updateDailiesFiltered = () => {\n    const goodMods = Object.keys(filterTypes).filter((x) => filterTypes[x]);\n    for (var x = 0; x < dailies.length; x++) {\n      if (Object.keys(dailies[x]).length === 0) continue;\n\n      let matched = 0;\n\n      Object.keys(dailies[x].mods).forEach((y, i) => {\n        if (goodMods.indexOf(y) !== -1) {\n          matched += 1;\n        }\n      });\n\n      if (matched >= toMatch) {\n        document.getElementById(String(dailies[x].seed)).style.visibility = \"\";\n      } else {\n        document.getElementById(String(dailies[x].seed)).style.visibility =\n          \"hidden\";\n      }\n    }\n  };\n\n  const forceDailies = () => {\n    setDailies(maybeMakeDaily(365, true));\n  };\n\n  return (\n    <DailyContext.Provider\n      value={{ dailies, updateDailies, updateDailiesFiltered, forceDailies }}\n    >\n      {children}\n    </DailyContext.Provider>\n  );\n};\n\nexport default DailyProvider;\n","import clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport { DailyContext } from \"./Context\";\n\ndeclare const window: any;\n\nfunction UniverseSwitch() {\n  const { forceDailies } = useContext(DailyContext);\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\n    if (window.daily_universe === clickedNumber) {\n      return;\n    } else {\n      window.daily_universe = clickedNumber;\n      forceDailies();\n    }\n  };\n\n  return (\n    <div className=\"flex mt-5 shadow-md\">\n      <div\n        className={clsx(\n          window.daily_universe === 1\n            ? \"bg-blue-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-2 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"1\"\n      >\n        Universe 1\n      </div>\n      <div\n        className={clsx(\n          window.daily_universe === 2\n            ? \"bg-pink-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-2 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"2\"\n      >\n        Universe 2\n      </div>\n    </div>\n  );\n}\n\nexport default UniverseSwitch;\n","import React, { useContext } from \"react\";\nimport Box, { WeekBox } from \"./Box\";\nimport { DailyContext } from \"./Context\";\nimport Filter from \"./Filter\";\nimport UniverseSwitch from \"./UniverseSwitch\";\n\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nfunction Daily() {\n  const { dailies } = useContext(DailyContext);\n\n  return (\n    <div className=\"flex flex-col flex-wrap items-center\">\n      <UniverseSwitch />\n\n      <Filter />\n      <div className=\"grid gap-2 grid-cols-7 mb-4\">\n        {days.map((x, idx) => {\n          return <WeekBox key={idx} text={x} />;\n        })}\n        {dailies.map((x, idx) => {\n          return <Box object={x} key={idx} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Daily;\n","import { decompressFromBase64 } from \"lz-string\";\n// import { testSave1 } from \"../test/testSave1.js\";\nimport { countDailyWeightDaily, DailyMods } from \"./daily\";\nimport { AutoBattleData, GameObject, Portal, Traps } from \"./GameObject.d\";\nimport { getDailyHeliumValue, isRewardActive } from \"./main\";\n\nconst extend = require(\"node.extend/lib/extend\");\n// const {\n// getUniverseChange,\n// getLevel,\n// getDailyBonus,\n// getExpBonus,\n// } = require(\"./fluffy\");\n// const { getHeirloomValue } = require(\"./main\");\n\nexport function handle_paste(ev): { game: GameObject; string: string } | false {\n  var save_string = ev.clipboardData.getData(\"text/plain\").replace(/\\s/g, \"\");\n  const game = JSON.parse(decompressFromBase64(save_string)) ?? null;\n  if (game?.global === undefined) return false;\n\n  return {\n    game,\n    string: save_string,\n  };\n}\n\nconst growth = 4;\nconst baseExp = 50;\nconst prestigeExpModifier = 5;\nconst baseFirstLevel = 1000;\nconst maxEvolution = 10;\n\nexport interface displayData {\n  xpPerRun: number;\n  currentZone: number;\n  table: [number[]];\n  levelUpTable: {};\n  percentToLevel: number;\n  bonesToLevel: number;\n  XPhr: number;\n  name: string;\n}\n\nexport class fluffyInstance {\n  string: string;\n\n  name = \"init\"; // getUniverseChange\n  firstLevel = 1000;\n  level = 0; // getLevel\n\n  iceBonus = 0;\n  expBonus = 0;\n\n  exp = 0; // game.global.fluffyExp/2 // getUniverseChange\n  evolution = 0; // game.global.fluffyPrestige/2 // getUniverseChange\n\n  purchasedFluffyPrestigeBonus = false;\n  purchasedFluffyExpBonus = false;\n\n  // Edit in inputs\n  universe = 1; // getUniverseChange\n  zoneYouPortal = 0; // getUniverseChange\n  dailyBonus = 0;\n  heirloomBonus = 0;\n  graphNextIce = false;\n  spiresCompleted = [];\n  instantUpdating = false;\n  minutesPerRun = 14;\n  averageWorshippers = 0;\n  frigidCompletions = 0;\n  //\n  currentExp = 0;\n\n  traps: Traps; // game.playerSpire.traps.Knowledge\n\n  autoBattle: AutoBattleData;\n\n  daily: DailyMods; // game.global.dailyChallenge\n\n  portal: Portal;\n\n  displayData: displayData = {\n    xpPerRun: 0,\n    currentZone: 0,\n    table: [[]],\n    levelUpTable: {},\n    percentToLevel: 0,\n    bonesToLevel: 0,\n    XPhr: 0,\n    name: \"init\",\n  };\n\n  save = {\n    fluffyExp: 0,\n    fluffyExp2: 0,\n    fluffyPrestige: 0,\n    fluffyPrestige2: 0,\n    lastPortal: 0, // game.global.lastPortal\n    lastRadonPortal: 0, // game.global.lastRadonPortal\n    bestFluffyExp: 0,\n    zone: [0, 0],\n    heirloomBonus: 0,\n  };\n\n  atMaxEvo = () => {\n    if (this.universe === 2) return true;\n    if (this.evolution === maxEvolution) return true;\n    return false;\n  };\n\n  getLevel = (evolution: number, exp: number) => {\n    return Math.floor(\n      Math.log((exp / this.getFirstLevel(evolution)) * (growth - 1) + 1) /\n        Math.log(growth)\n    );\n  };\n\n  getFirstLevel = (evolution: number) => {\n    return baseFirstLevel * Math.pow(prestigeExpModifier, evolution);\n  };\n\n  removeExp = (evolution: number, level: number) => {\n    if (level === 10) return 0;\n    return Math.floor(\n      this.firstLevel *\n        Math.pow(prestigeExpModifier, evolution) *\n        ((Math.pow(growth, level) - 1) / (growth - 1))\n    );\n  };\n\n  getExpBonus = () => {\n    let num = 1;\n    if (this.universe === 1) {\n      num *= this.getExpGrowth();\n    }\n    if (this.dailyBonus > 1) {\n      num *= this.dailyBonus;\n    }\n    if (this.heirloomBonus > 1) {\n      num *= this.heirloomBonus;\n    }\n    if (this.purchasedFluffyExpBonus) {\n      num *= 0.25 * this.evolution + 1;\n    }\n    if (this.traps.owned > 0) {\n      num *= (0.15 + (this.traps.level - 1) * 0.075) * this.traps.owned + 1;\n    }\n    if (this.graphNextIce && this.iceBonus > 1) {\n      num *= this.iceBonus;\n    }\n    if (this.frigidCompletions > 0) {\n      num *= 1 + (((this.frigidCompletions / 2) * (this.frigidCompletions + 1)) / 40);\n    }\n\n    if (this.universe === 2) {\n      if (this.averageWorshippers > 0) {\n        num *= this.averageWorshippers * 0.05 * 0.375 + 1;\n      }\n\n      if (this.autoBattle.oneTimers.Battlescruff) {\n        num *= 1 + (this.autoBattle.maxEnemyLevel - 1) / 50;\n      }\n    }\n\n    return num;\n  };\n\n  getUpgradeExp = (evolution: number, level: number, expInLevel: number) => {\n    if (level === 10) {\n      return this.currentExp;\n    }\n    return Math.floor(\n      this.firstLevel *\n        Math.pow(prestigeExpModifier, evolution) *\n        ((Math.pow(growth, level + 1) - 1) / (growth - 1)) -\n        this.removeExp(evolution, level)\n    );\n  };\n\n  getMinZoneForExp = () => {\n    if (this.universe === 1) {\n      var zone = 301;\n      if (this.portal.Classy.level) zone -= this.portal.Classy.level * 3;\n      return Math.floor(zone);\n    } else {\n      return 0;\n    }\n  };\n\n  getExpGrowth = () => {\n    if (this.universe === 2) return 1.02;\n    return 1.015;\n  };\n\n  getBaseExp = () => {\n    if (this.universe === 2) return 2.5;\n    return 50;\n  };\n\n  xpFromZone = (start: number, end: number): number => {\n    const minimumZone = this.getMinZoneForExp();\n    // If ending before you're actually allowed to get xp then return nothing.\n    let mcalc1: number, mcalc2: number;\n\n    if (end < minimumZone) {\n      return 0;\n    }\n    // If starting before you're allowed to get xp, set start to min zone.\n    if (start < minimumZone) {\n      start = minimumZone;\n    }\n\n    if (this.universe === 1) {\n      mcalc1 =\n        (Math.pow(this.getExpGrowth(), end - minimumZone) - 1) /\n        (this.getExpGrowth() - 1);\n      mcalc2 =\n        (this.getBaseExp() + this.portal.Curious.level * 80) *\n        (1 + this.portal.Cunning.level * 0.25) *\n        this.expBonus;\n    } else {\n      mcalc1 =\n        (Math.pow(Math.pow(this.getExpGrowth(), 3), end) - 1) /\n        (Math.pow(this.getExpGrowth(), 3) - 1);\n      mcalc2 = this.getBaseExp() * this.expBonus;\n    }\n\n    let addSpireBonus = 0;\n\n    if (this.universe === 1 && this.spiresCompleted.length > 0) {\n      const spiresCompletedZones = this.spiresCompleted.map(\n        (spireNumber) => (spireNumber + 1) * 100\n      );\n\n      addSpireBonus = spiresCompletedZones.reduce((total, zone) => {\n        if (start < zone && end > zone) return total + this.spireXP(zone);\n\n        return total;\n      }, 0);\n    }\n\n    // Minus all of the previous zone xp.\n    if (start > minimumZone) {\n      return (\n        mcalc1 * mcalc2 + addSpireBonus - this.xpFromZone(minimumZone, start)\n      );\n    } else {\n      return mcalc1 * mcalc2 + addSpireBonus;\n    }\n  };\n\n  spireXP = (zone: number) => {\n    var reward =\n      (baseExp + this.portal.Curious.level * 80) *\n      Math.pow(this.getExpGrowth(), zone - this.getMinZoneForExp() - 1) *\n      (1 + this.portal.Cunning.level * 0.25);\n    return reward * this.expBonus * this.getExpGrowth();\n  };\n\n  getHeirloomValue = (\n    bonus: number,\n    universe: number,\n    evolution: number,\n    level: number,\n    boughtEarly: boolean\n  ) => {\n    var b = bonus / 100 + 1;\n    if (\n      universe === 2 &&\n      !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n    )\n      b = (b - 1) * 0.1 + 1;\n    if (b > 1) {\n      return b;\n    } else if (b === 1) {\n      return 1;\n    }\n  };\n\n  getTableCell = (evolution: number, level: number, prevRuns: number) => {\n    if (this.evolution === evolution && this.level > level) {\n      return 0;\n    }\n\n    const xpPerRun = this.displayData.xpPerRun;\n\n    const currentExp = this.evolution === evolution ? this.currentExp : 0;\n\n    const neededExpForLevel = this.getUpgradeExp(evolution, level, currentExp);\n\n    const runs = (neededExpForLevel - currentExp) / xpPerRun;\n    return runs + prevRuns;\n  };\n\n  getTableData = () => {\n    let evolution = this.evolution;\n\n    this.displayData.xpPerRun = Math.round(\n      this.xpFromZone(0, this.zoneYouPortal)\n    );\n\n    let data = [];\n\n    let runs = 0;\n\n    let startingLevel = this.universe === 2 ? this.level : 0;\n\n    for (let lev = startingLevel; lev < startingLevel + 10; lev++) {\n      runs = this.getTableCell(evolution, lev, runs);\n      data[lev] = [runs];\n    }\n\n    if (!this.atMaxEvo()) {\n      for (let lev = 0; lev < 10; lev++) {\n        runs = this.getTableCell(evolution + 1, lev, runs);\n        data[lev].push(runs);\n      }\n    }\n\n    return data as [number[]];\n  };\n\n  getLevelUpTable = (): Partial<{ [key: string]: number }> => {\n    let evolution = this.evolution;\n    let level = this.level;\n\n    let zone = this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    let data = {};\n\n    let maxZone = this.zoneYouPortal + 100;\n    let zoneLastLeveled = zone;\n\n    // prettier-ignore\n    const currentRelativeExp = this.evolution === evolution ? this.currentExp : 0;\n    // prettier-ignore\n    let neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n\n    neededExpForLevel = neededExpForLevel - currentRelativeExp;\n\n    if (this.xpFromZone(zoneLastLeveled, maxZone) > neededExpForLevel) {\n      for (var z = zone; z < maxZone; z++) {\n        let collectedExp = this.xpFromZone(zoneLastLeveled, z + 1);\n        if (collectedExp >= neededExpForLevel) {\n          zoneLastLeveled = z;\n\n          if (level === 9) {\n            if (this.universe === 1 && evolution === maxEvolution) break;\n            evolution++;\n            level = 0;\n          } else {\n            level++;\n          }\n\n          let key: string;\n          if (this.universe === 2) {\n            key = \"\";\n          } else {\n            key = `E${evolution}`;\n          }\n\n          key += `L${level}`;\n\n          data = { ...data, [key]: z };\n\n          // prettier-ignore\n          neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n        } else {\n          continue;\n        }\n      }\n    }\n    return data;\n  };\n\n  updateUniverse = (universe: number) => {\n    this.universe = universe;\n    this.name = universe === 1 ? \"Fluffy\" : \"Scruffy\";\n\n    this.evolution =\n      universe === 1 ? this.save.fluffyPrestige : this.save.fluffyPrestige2;\n\n    this.exp = universe === 1 ? this.save.fluffyExp : this.save.fluffyExp2;\n\n    this.zoneYouPortal =\n      universe === 1 ? this.save.lastPortal : this.save.lastRadonPortal;\n\n    this.level = this.getLevel(this.evolution, this.exp);\n\n    this.currentExp = Math.ceil(\n      this.exp - this.removeExp(this.evolution, this.level)\n    );\n\n    this.heirloomBonus = getHeirloomValue(\n      this.save.heirloomBonus,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n\n    this.dailyBonus = getDailyBonus(\n      this.daily,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n  };\n\n  updateDisplayData = () => {\n    const neededExpForLevel = this.getUpgradeExp(this.evolution, this.level, 0);\n    const xpPerRun = Math.round(this.xpFromZone(0, this.zoneYouPortal));\n    const currentZone =\n      this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    this.displayData = {\n      xpPerRun: xpPerRun,\n      table: this.getTableData(),\n      levelUpTable: this.getLevelUpTable(),\n      currentZone: currentZone,\n      percentToLevel: Number(\n        ((this.currentExp / neededExpForLevel) * 100).toFixed(2)\n      ),\n      bonesToLevel:\n        this.universe === 1\n          ? Math.ceil(\n              (neededExpForLevel - this.currentExp) / this.save.bestFluffyExp\n            ) * 100\n          : 0,\n      XPhr:\n        this.minutesPerRun > 0\n          ? Math.round((xpPerRun / this.minutesPerRun) * 60)\n          : 0,\n\n      name: this.name,\n    };\n  };\n\n  pasteSaveActions = (gameSave: GameObject) => {\n    this.save = {\n      fluffyExp: gameSave.global.fluffyExp,\n      fluffyExp2: gameSave.global.fluffyExp2,\n      fluffyPrestige: gameSave.global.fluffyPrestige,\n      fluffyPrestige2: gameSave.global.fluffyPrestige2,\n      lastPortal: gameSave.global.lastPortal,\n      lastRadonPortal: gameSave.global.lastRadonPortal,\n      bestFluffyExp: gameSave.stats.bestFluffyExp.valueTotal,\n      zone: [gameSave.global.universe, gameSave.global.world],\n      heirloomBonus: gameSave.heirlooms.Staff.FluffyExp.currentBonus,\n    };\n\n    this.autoBattle = gameSave.global.autoBattleData;\n\n    this.daily = extend(true, {}, gameSave.global.dailyChallenge);\n    this.portal = extend(true, {}, gameSave.portal);\n\n    this.updateUniverse(gameSave.global.universe);\n\n    this.purchasedFluffyExpBonus = gameSave.talents.fluffyExp.purchased;\n\n    this.averageWorshippers =\n      this.universe === 2 ? gameSave.jobs.Worshipper.owned : 0;\n\n    this.purchasedFluffyPrestigeBonus =\n      gameSave.talents.fluffyAbility.purchased;\n\n    this.traps = extend(true, {}, gameSave.playerSpire.traps.Knowledge);\n\n    this.graphNextIce = gameSave.global.uberNature === \"Ice\";\n\n    this.iceBonus =\n      this.universe === 1 ? 1 + 0.0025 * gameSave.empowerments.Ice.level : 1;\n    \n    this.frigidCompletions = gameSave.global.frigidCompletions;\n\n    this.expBonus = this.getExpBonus();\n\n    this.updateDisplayData();\n  };\n\n  saveLocalStorage = () => {\n    localStorage.setItem(\n      \"fluffy-fluffy\",\n      JSON.stringify({\n        instantUpdating: this.instantUpdating,\n        minutesPerRun: this.minutesPerRun,\n        spiresCompleted: this.spiresCompleted,\n      })\n    );\n  };\n\n  getLocalStorage = () => {\n    let saveObj = JSON.parse(localStorage.getItem(\"fluffy-fluffy\"));\n\n    this.instantUpdating = saveObj?.instantUpdating ?? false;\n    this.minutesPerRun = saveObj?.minutesPerRun ?? 0;\n    this.spiresCompleted = saveObj?.spiresCompleted ?? [];\n  };\n\n  changeVar = (label: string, value: string) => {\n    switch (label) {\n      case \"Capable Level\":\n        this.portal.Capable.level = Number(value);\n        break;\n      case \"Cunning Level\":\n        this.portal.Cunning.level = Number(value);\n        break;\n      case \"Curious Level\":\n        this.portal.Curious.level = Number(value);\n        break;\n      case \"Classy Level\":\n        this.portal.Classy.level = Number(value);\n        break;\n      case \"Zone You Portal\":\n        this.zoneYouPortal = Number(value);\n        break;\n      case \"Daily Bonus\":\n        this.dailyBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Heirloom Bonus\":\n        this.heirloomBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"List of Spire Clears\":\n        this.spiresCompleted = value.split(\",\").map(Number);\n        this.saveLocalStorage();\n        break;\n      case \"Knowledge Towers\":\n        this.traps.owned = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Knowledge Level\":\n        this.traps.level = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Frigid Completions\":\n        this.frigidCompletions = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Average Worshippers\":\n        this.averageWorshippers = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Minutes Per Run\":\n        this.minutesPerRun = Number(value);\n        this.saveLocalStorage();\n        break;\n    }\n  };\n}\n\nconst getHeirloomValue = (\n  bonus: number,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  var b = bonus / 100 + 1;\n  if (\n    universe === 2 &&\n    !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n  )\n    b = (b - 1) * 0.1 + 1;\n  if (b > 1) {\n    return b;\n  } else if (b === 1) {\n    return 1;\n  }\n};\n\nconst getDailyBonus = (\n  daily: DailyMods,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  if (daily.seed) {\n    return (\n      getDailyHeliumValue(\n        countDailyWeightDaily(daily),\n        isRewardActive(\"dailies\", universe, evolution, level, boughtEarly)\n      ) /\n        100 +\n      1\n    );\n  } else {\n    return 1;\n  }\n};\n","import React, { createContext, useState } from \"react\";\nimport { fluffyInstance } from \"../../calculators/fluffy\";\n\ninterface ContextType {\n  fluffyInstances?: { [index: string]: fluffyInstance };\n  anotherInstance?: () => void;\n  shown?: number[];\n}\n\nexport const FluffyContext = createContext<ContextType>({});\n// const initial_dailies = maybeMakeDaily(365);\nconst FluffyProvider = ({ children }: { children: React.ReactNode }) => {\n  const [fluffyInstances, setFluffyInstance] = useState({\n    0: new fluffyInstance(),\n  });\n\n  const [shown, setShown] = useState([0]);\n\n  const anotherInstance = () => {\n    console.log(\"Adding another Fluffy Instance. Epic\");\n    setShown((old) => [...old, old.length - 1]);\n    setFluffyInstance((old) => {\n      return { ...old, [Object.keys(old).length]: new fluffyInstance() };\n    });\n  };\n\n  return (\n    <FluffyContext.Provider\n      value={{\n        fluffyInstances,\n        anotherInstance,\n        shown,\n      }}\n    >\n      {children}\n    </FluffyContext.Provider>\n  );\n};\n\nexport default FluffyProvider;\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { fluffyInstance } from \"../../calculators/fluffy\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\nimport Label from \"../utils/Label\";\n\nconst TrueFalseButton = ({\n  colors,\n  onClick,\n  active,\n}: {\n  colors: boolean;\n  onClick: () => void;\n  active: boolean;\n}) => {\n  const [isActive, setIsActive] = useState(active);\n\n  let colorClasses: string = \"\";\n\n  if (colors) {\n    if (isActive) {\n      colorClasses = \"bg-tier3 text-black\";\n    } else {\n      colorClasses = \"bg-tier1 text-black\";\n    }\n  }\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          onClick();\n          setIsActive((prev) => !prev);\n        }}\n        className={clsx(\n          colors ? colorClasses : \"bg-secondary\",\n          \"p-1 pl-2 text-xs border border-solid border-accent rounded shadow cursor-pointer select-none sm:text-base\"\n        )}\n      >\n        {isActive ? \"True\" : \"False\"}\n      </div>\n    </>\n  );\n};\n\nconst MemoTrueFalseButton = React.memo(TrueFalseButton);\n\ninterface Props {\n  index: number;\n  instance: fluffyInstance;\n  universe: number;\n  renderParent: () => void;\n}\n\nfunction InputSection({ index, instance, universe, renderParent }: Props) {\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const target: HTMLInputElement = e.target;\n\n    const label = target.labels![0].innerText;\n    const value = target.value;\n\n    instance.changeVar(label, value);\n\n    if (instance.instantUpdating) {\n      instance.updateDisplayData();\n      renderParent();\n    }\n  };\n\n  const handleClick = (type: string) => {\n    if (type === \"Instant Updating\") {\n      instance.instantUpdating = !instance.instantUpdating;\n      instance.saveLocalStorage();\n    }\n\n    if (type === \"Ice\") {\n      instance.graphNextIce = !instance.graphNextIce;\n\n      if (instance.instantUpdating) {\n        instance.expBonus = instance.getExpBonus();\n        instance.updateDisplayData();\n        renderParent();\n      }\n    }\n\n    if (type === \"Fluffocus\") {\n      instance.purchasedFluffyExpBonus = !instance.purchasedFluffyExpBonus;\n\n      if (instance.instantUpdating) {\n        instance.expBonus = instance.getExpBonus();\n        instance.updateDisplayData();\n        renderParent();\n      }\n    }\n\n    if (type === \"Calculate\") {\n      instance.updateDisplayData();\n      renderParent();\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"grid gap-4 grid-cols-2 items-end mt-4 w-full\"\n        onChange={(e) => handleInput(e as React.ChangeEvent<HTMLInputElement>)}\n        key={instance.universe}\n      >\n        {/* U1 */}\n        {/*  Set mins and max's later */}\n        {instance?.name !== \"init\" && (\n          <>\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\n            {universe === 1 && (\n              <>\n                <Label>\n                  Capable Level\n                  <Input\n                    min={1}\n                    max={10}\n                    variant=\"fluffy\"\n                    defaultValue={instance?.portal?.Capable?.level || 0}\n                  />\n                </Label>\n                <Label>\n                  Cunning Level\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.portal?.Cunning?.level || 0}\n                  />\n                </Label>\n\n                {!instance.portal.Curious.locked && (\n                  <Label>\n                    Curious Level\n                    <Input\n                      variant=\"fluffy\"\n                      defaultValue={instance?.portal?.Curious?.level || 0}\n                    />\n                  </Label>\n                )}\n\n                {!instance.portal.Classy.locked && (\n                  <Label>\n                    Classy Level\n                    <Input\n                      variant=\"fluffy\"\n                      defaultValue={instance?.portal?.Classy?.level || 0}\n                    />\n                  </Label>\n                )}\n              </>\n            )}\n            <Label>\n              Zone You Portal\n              <Input\n                min={instance.getMinZoneForExp()}\n                variant=\"fluffy\"\n                defaultValue={instance?.zoneYouPortal || 0}\n              />\n            </Label>\n            <Label>\n              Daily Bonus\n              <Input\n                variant=\"fluffy\"\n                defaultValue={Math.round(instance?.dailyBonus * 100) - 100 || 0}\n              />\n            </Label>\n            <Label>\n              Heirloom Bonus\n              <Input\n                variant=\"fluffy\"\n                defaultValue={\n                  Math.round(instance?.heirloomBonus * 100) - 100 || 0\n                }\n              />\n            </Label>\n            {universe === 1 && (\n              <Label>\n                List of Spire Clears\n                <Input defaultValue={String(instance.spiresCompleted || \"\")} />\n              </Label>\n            )}\n\n            {!instance?.traps.locked && (\n              <>\n                <Label>\n                  Knowledge Towers\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.traps.owned || 0}\n                  />\n                </Label>\n                <Label>\n                  Knowledge Level\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.traps.level || 0}\n                  />\n                </Label>\n              </>\n            )}\n\n            {universe === 1 && (\n              <Label>\n                Ice Enlightenment\n                <MemoTrueFalseButton\n                  colors={true}\n                  active={instance.graphNextIce}\n                  onClick={() => {\n                    handleClick(\"Ice\");\n                  }}\n                />\n              </Label>\n            )}\n\n            {universe === 1 && (\n              <Label>\n                Fluffocus Mastery\n                <MemoTrueFalseButton\n                  colors={true}\n                  active={instance.purchasedFluffyExpBonus}\n                  onClick={() => {\n                    handleClick(\"Fluffocus\");\n                  }}\n                />\n              </Label>\n            )}\n            \n            {universe === 1 && (\n              <Label>\n                Frigid Completions\n                <Input\n                  variant=\"fluffy\"\n                  max={15}\n                  defaultValue={instance?.frigidCompletions || 0}\n                  />\n              </Label>\n            )}\n\n            {universe === 2 && (\n              <Label>\n                Average Worshippers\n                <Input\n                  variant=\"fluffy\"\n                  max={50}\n                  defaultValue={instance.averageWorshippers}\n                />\n              </Label>\n            )}\n\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\n\n            <Label>\n              Minutes Per Run\n              <Input variant=\"fluffy\" defaultValue={instance.minutesPerRun} />\n            </Label>\n\n            <Label>\n              Instant Updating\n              <MemoTrueFalseButton\n                colors={true}\n                active={instance.instantUpdating}\n                onClick={() => handleClick(\"Instant Updating\")}\n              />\n            </Label>\n\n            <Button\n              className=\"col-span-2 text-center\"\n              label=\"Calculate\"\n              onClick={() => handleClick(\"Calculate\")}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(InputSection, (prevProps, nextProps) => {\n  return prevProps.universe === nextProps.universe;\n});\n","import React, { ReactElement } from \"react\";\n\ninterface Props {\n  table: {\n    [key: string]: number;\n  };\n}\n\nfunction LevelUpTable({ table }: Props): ReactElement {\n  return (\n    <>\n      <table className=\"w-max text-center bg-secondary border border-solid border-prpl shadow-xl\">\n        <thead>\n          <tr className=\"bg-thirdary\">\n            <th className=\"cell\">💉</th>\n            <th className=\"cell\">On Zone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(table).map((key, idx) => {\n            return (\n              <tr className=\"hover:bg-thirdary\" key={idx}>\n                <td className=\"cell font-bold bg-thirdary\">{key}</td>\n                <td className=\"cell\">{table[key]}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default React.memo(LevelUpTable);\n","import React, { ReactElement } from \"react\";\n\ninterface Props {\n  data: {\n    evolution: number;\n    level: number;\n    table: [number[]];\n  };\n  second: boolean;\n  time?: number;\n}\n\nfunction sformat(s: number) {\n  if (s === 0) return 0;\n  var fm = [\n    Math.floor(s / 60 / 60 / 24), // DAYS\n    Math.floor(s / 60 / 60) % 24, // HOURS\n    Math.floor(s / 60) % 60, // MINUTES\n    Math.floor(s % 60), // SECONDS\n  ];\n  return fm\n    .map(function (v) {\n      return (v < 10 ? \"0\" : \"\") + v;\n    })\n    .join(\":\")\n    .replace(/00:/g, \"\");\n}\n\nfunction RunTimeTable({ data, second, time }: Props): ReactElement {\n  return (\n    <>\n      <div className=\"my-2 text-xl\">{`E${data.evolution}L${data.level}`}</div>\n      <table className=\"w-full bg-secondary border border-solid border-prpl shadow-xl\">\n        <thead>\n          <tr className=\"bg-thirdary\">\n            <th className=\"cell\">💉</th>\n            <th className=\"cell\">{`Runs to E${data.evolution}`}</th>\n            {time! > 0 && (\n              <th className=\"cell\">{`Time to E${data.evolution}`}</th>\n            )}\n            {second && (\n              <th className=\"cell\">{`Runs to E${data.evolution + 1}`}</th>\n            )}\n            {second && time! > 0 && (\n              <th className=\"cell\">{`Time to E${data.evolution + 1}`}</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {data.table.map((cell, idx) => {\n            return (\n              <tr className=\"hover:bg-thirdary\" key={idx}>\n                <td className=\"cell font-bold bg-thirdary\">{`L${idx + 1}`}</td>\n                <td className=\"cell\">\n                  {cell[0] === 0 ? \"\" : cell[0].toFixed(2)}\n                </td>\n                {time! > 0 && (\n                  <td className=\"cell\">\n                    {cell[0] === 0 ? \"\" : sformat(cell[0] * time! * 60)}\n                  </td>\n                )}\n\n                {cell[1] !== undefined && (\n                  <>\n                    <td className=\"cell\">{cell[1].toFixed(2)}</td>\n                    {time! > 0 && (\n                      <td className=\"cell\">{sformat(cell[1] * time! * 60)}</td>\n                    )}\n                  </>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default RunTimeTable;\n","import React, { ReactElement } from \"react\";\nimport { displayData } from \"../../calculators/fluffy\";\nimport { MemoInput as Input } from \"../utils/Input\";\nimport Label from \"../utils/Label\";\n\ninterface Props {\n  data: displayData;\n}\n\nfunction Stats({ data }: Props): ReactElement {\n  return (\n    <>\n      Extra Stats\n      <hr className=\"m-auto my-2 w-3/5 border-accent\" />\n      <div className=\"grid gap-3 grid-cols-2\">\n        {data.xpPerRun > 0 && (\n          <Label className=\"col-span-2\">\n            XP Per Run\n            <Input\n              value={addCommas(data.xpPerRun)}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n        <Label className=\"col-span-2\">\n          Percent Of Level - {data.percentToLevel}%\n          <div className=\"flex w-full bg-thirdary border border-solid border-accent rounded\">\n            <div\n              className=\"flex flex-col p-1 text-xs bg-green-500 rounded sm:text-base\"\n              style={{ width: `${data.percentToLevel}%` }}\n            >\n              &nbsp;\n            </div>\n          </div>\n        </Label>\n        <Label>\n          Current Zone\n          <Input\n            value={data.currentZone}\n            disabled={true}\n            className=\"bg-thirdary\"\n          />\n        </Label>\n        {data.bonesToLevel > 0 && (\n          <Label>\n            Bones To Level\n            <Input\n              value={data.bonesToLevel}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n\n        {data.XPhr > 0 && (\n          <Label className=\"col-span-2\">\n            {data.name} XP/hr\n            <Input\n              value={addCommas(data.XPhr)}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Stats;\n\nfunction addCommas(x: number) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import clsx from \"clsx\";\nimport React from \"react\";\n\nfunction UniverseSwitch({\n  onClick,\n  universe,\n}: {\n  onClick: (u: number) => void;\n  universe: number;\n}) {\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\n    onClick(clickedNumber);\n  };\n\n  return (\n    <div className=\"flex mx-auto w-max shadow-md\">\n      <div\n        className={clsx(\n          universe === 1\n            ? \"bg-blue-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-1 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"1\"\n      >\n        Universe 1\n      </div>\n      <div\n        className={clsx(\n          universe === 2\n            ? \"bg-pink-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-1 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"2\"\n      >\n        Universe 2\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(UniverseSwitch);\n","import clsx from \"clsx\";\nimport React, {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\nimport { fluffyInstance, handle_paste } from \"../../calculators/fluffy\";\nimport { testSave3 } from \"../../testsaves/three\";\nimport Button from \"../utils/Button\";\nimport InputSection from \"./InputSection\";\nimport LevelUpTable from \"./LevelUpTable\";\nimport RunTimeTable from \"./RunTimeTable\";\nimport Stats from \"./Stats\";\nimport UniverseSwitch from \"./UniverseSwitch\";\n\n// This keeps all update props.\n\nfunction SaveBox({\n  onPaste,\n  save,\n}: {\n  onPaste: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  save?: string;\n}) {\n  const [show, setShow] = useState(true);\n  const textRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\n  return (\n    <>\n      {save && show && (\n        <Button\n          variant=\"small\"\n          className=\"col-span-2 self-center mb-4\"\n          onClick={() => {\n            textRef.current.innerText = save;\n            setShow(!show);\n          }}\n          label=\"Retrieve save\"\n        />\n      )}\n      <textarea\n        className=\"p-2 w-full text-sm bg-secondary border border-solid border-accent rounded outline-none shadow-md resize-none\"\n        onPaste={onPaste}\n        ref={textRef}\n        placeholder=\"Paste your save...\"\n        // defaultValue={instance?.string}\n      />\n    </>\n  );\n}\n\nconst MemoSaveBox = React.memo(SaveBox, (prevProps, nextProps) => {\n  return true;\n});\n\nfunction Template({\n  index,\n  instance,\n}: {\n  index: number;\n  instance: fluffyInstance;\n}) {\n  const [update, setUpdate] = useState(true);\n\n  useEffect(() => {\n    if (false) {\n      instance.pasteSaveActions(testSave3);\n      setUpdate(!update);\n    }\n  }, []);\n\n  if (instance.name === \"init\") {\n    instance.getLocalStorage();\n  }\n\n  const forceRefresh = useCallback(() => {\n    setUpdate((prev) => !prev);\n  }, [setUpdate]);\n\n  const changeUniverse = useCallback(\n    (universe: number) => {\n      if (universe === instance.universe) return;\n\n      instance.updateUniverse(universe);\n      instance.expBonus = instance.getExpBonus();\n      instance.updateDisplayData();\n      forceRefresh();\n    },\n    [instance, forceRefresh]\n  );\n\n  const getPaste = (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\n    let save = handle_paste(e);\n    if (save === false) return;\n    instance.pasteSaveActions(save.game);\n    instance.string = save.string;\n\n    forceRefresh();\n  };\n\n  return (\n    <>\n      <div className=\"grid gap-2 grid-cols-1 content-center py-10 sm:grid-cols-2 md:gap-5 md:grid-cols-4 xl:grid-cols-10\">\n        {/* INPUT AREA */}\n        <div\n          className={clsx(\n            instance.name === \"init\"\n              ? \"col-span-10 justify-self-center w-1/2\"\n              : \"self-center xl:col-span-2 xl:col-start-2\",\n            \"flex flex-wrap justify-center\"\n          )}\n        >\n          <MemoSaveBox onPaste={getPaste} save={instance.string ?? null} />\n          {instance.name !== \"init\" && (\n            <InputSection\n              index={index}\n              instance={instance}\n              universe={instance.universe}\n              renderParent={forceRefresh}\n            />\n          )}\n        </div>\n        {instance.name !== \"init\" && (\n          <>\n            {/* TABLE AREA */}\n            <div className=\"text-center md:col-span-2 xl:col-span-4\">\n              <UniverseSwitch\n                universe={instance.universe}\n                onClick={changeUniverse}\n              />\n\n              <RunTimeTable\n                second={!instance.atMaxEvo()}\n                time={instance.minutesPerRun}\n                data={{\n                  evolution: instance.evolution,\n                  level: instance.level,\n                  table: instance.displayData.table,\n                }}\n              />\n            </div>\n\n            {/* STATS AREA */}\n            <div className=\"text-center sm:col-span-2 sm:mt-3 md:col-span-1 md:mt-0 xl:col-span-2\">\n              <div className=\"m-auto w-1/2 md:w-auto\">\n                <Stats data={instance.displayData} />\n              </div>\n            </div>\n            {Object.keys(instance.displayData.levelUpTable).length > 0 && (\n              <div className=\"col-span-1 m-auto sm:col-span-2 md:col-span-4 xl:col-span-10\">\n                <LevelUpTable table={instance.displayData.levelUpTable} />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <hr className=\"m-auto w-4/6 border-prpl shadow\" />\n    </>\n  );\n}\n\nexport default React.memo(Template, (prevProps, nextProps) => {\n  return prevProps.index === nextProps.index;\n});\n","import React, { useContext } from \"react\";\nimport { FluffyContext } from \"./Context\";\nimport Template from \"./Template\";\n\n// interface Props {\n\n// }\n\nfunction Fluffy() {\n  const { fluffyInstances, anotherInstance, shown } = useContext(FluffyContext);\n\n  return (\n    <>\n      <div className=\"p-5\">\n        {shown!.map((x, index) => {\n          return (\n            <Template\n              index={index}\n              key={index}\n              instance={fluffyInstances![index]}\n            />\n          );\n        })}\n\n        <div className=\"w-full\">\n          <div\n            className=\"relative m-auto w-32 h-32 text-primary fill-current cursor-pointer select-none\"\n            onClick={() => {\n              anotherInstance!();\n            }}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n            </svg>\n            <div className=\"absolute bottom-0 w-full text-center\">\n              Add Instance\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Fluffy;\n","import clsx from \"clsx\";\nimport React, { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst TITLES = { \"/fluffy\": \"Fluffy Calculator\", \"/daily\": \"Daily Seeker\" };\n\nconst swapTheme = (to: string) => {\n  if (to === \"light-theme\") {\n    localStorage.setItem(\"fluffy-theme\", \"light-theme\");\n    document.body.classList.replace(\"dark-theme\", \"light-theme\");\n  } else {\n    localStorage.setItem(\"fluffy-theme\", \"dark-theme\");\n    document.body.classList.replace(\"light-theme\", \"dark-theme\");\n  }\n};\n\nfunction ThemeSwitcher() {\n  return (\n    <div\n      className=\"absolute right-0 top-0 m-1 p-1 text-primary bg-secondary border border-solid border-green-400 shadow-xl invisible cursor-pointer select-none sm:visible\"\n      onClick={() => {\n        if (document.body.classList.contains(\"light-theme\")) {\n          swapTheme(\"dark-theme\");\n        } else {\n          swapTheme(\"light-theme\");\n        }\n      }}\n    >\n      Swap Theme\n    </div>\n  );\n}\n\nfunction Tab({ location, current }: { location: string; current: boolean }) {\n  return (\n    <Link\n      to={location}\n      className={clsx(\n        current && \"text-prpl border-b-2 border-prpl\",\n        \"inline-block p-3 pb-1 text-base font-extrabold\"\n      )}\n    >\n      {TITLES[location]}\n    </Link>\n  );\n}\n\nfunction NavBar() {\n  useEffect(() => {\n    swapTheme(localStorage.getItem(\"fluffy-theme\"));\n  }, []);\n\n  const location: Location = useLocation();\n\n  const currentLocation = location?.pathname;\n\n  document.title = TITLES[currentLocation] || \"Fluffy Calculator\";\n\n  return (\n    <div className=\"width-full text-center bg-thirdary shadow-md\">\n      <Tab\n        location=\"/fluffy\"\n        current={currentLocation === \"/\" || currentLocation === \"/fluffy\"}\n      />\n      <Tab location=\"/daily\" current={currentLocation === \"/daily\"} />\n\n      <ThemeSwitcher />\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Daily from \"./components/Daily/Daily\";\nimport Fluffy from \"./components/Fluffy/Fluffy\";\nimport NavBar from \"./components/NavBar\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\" hashType=\"noslash\">\n      <main>\n        <NavBar />\n        <Switch>\n          <Route path=\"/daily\" component={Daily} />\n          <Route path=\"/(fluffy|)\" component={Fluffy} />\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/index.css\";\nimport DailyProvider from \"./components/Daily/Context\";\nimport FluffyProvider from \"./components/Fluffy/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DailyProvider>\n      <FluffyProvider>\n        <App />\n      </FluffyProvider>\n    </DailyProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}